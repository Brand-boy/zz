#!/usr/bin/python2
#coding=utf-8 
import os,sys,time,datetime,random,hashlib,re,threading,json,urllib,cookielib,requests,mechanize
from multiprocessing.pool import ThreadPool
from requests.exceptions import ConnectionError
from mechanize import Browser


reload(sys)
sys.setdefaultencoding('utf8')
br = mechanize.Browser()
br.set_handle_robots(False)
br.set_handle_refresh(mechanize._http.HTTPRefreshProcessor(),max_time=1)
br.addheaders = [('User-Agent', 'Opera/12.0 (Android; Opera Mini/52.2.2254/85. U; id) Presto/2.12.423 Version/12.16')]




def jalan(z):
    for e in z + '\n':
        sys.stdout.write(e) 
        sys.stdout.flush()
        time.sleep(3.0 / 200)

                                   
back = 0
successful = []
cpb = []
oks = []
id = []

def menu():
	os.system('clear')
	os.system('figlet -f slant S O M I ')
	os.system('figlet -f slant REPORT ')
        print "\033[1;93m\033[1;97m> \033[1;91m1.\x1b[1;92m CoviD19 Death Report.  "
        time.sleep(0.05)
	print "\033[1;93m\033[1;97m> \033[1;91m2.\x1b[1;92m Target  Profile.  "
        time.sleep(0.05)
        print "\033[1;93m\033[1;97m> \033[1;91m3.\x1b[1;92m Start   Reporting."
        time.sleep(0.05)
        print "\033[1;93m\033[1;97m> \033[1;91m4.\x1b[1;92m Start   Report1.  "
        time.sleep(0.05)
        print "\033[1;93m\033[1;97m> \033[1;91m5.\x1b[1;92m Start   Report2.  "
        time.sleep(0.05)
        print "\033[1;93m\033[1;97m> \033[1;91m6.\x1b[1;92m Start   Report3.  "
        time.sleep(0.05)
        print "\033[1;93m\033[1;97m> \033[1;91m7.\x1b[1;92m Start   Report4.  "
        time.sleep(0.05)
	print "\033[1;93m\033[1;91m> \033[1;91m0.\033[1;91m Back             "
	pilih_fighter()

def pilih_fighter():
	peak = raw_input("\n\033[1;91mChoose an Option>>> \033[1;95m")
	if peak =="":
		print "\x1b[1;91mFill in correctly"
		pilih_fighter()
        elif peak =="1":
	        os.system('xdg-open https://m.facebook.com/help/contact/228813257197480?refid=69')
	        pilih_fighter()
	elif peak =="2":
		report()
        elif peak =="3":
	        rep()
        elif peak =="4":
                test1()
        elif peak =="5":
	        test2()
        elif peak =="6":
	        test3()
        elif peak =="7":
	        test4()
	elif peak =="0":
		menu()
def report():
    try:
        os.system('clear')
        print logo3
        id = raw_input(R+'[+]'+G+' Enter Target Id: '+W)
        my = ("https://m.facebook.com/"+id)
        url = my
        br.open(url)
        dray = raw_input(R+'[*] '+G+'Do You Want To Report \n'+R+'[+]'+G+' [y/n] :\n'+ G +' BlackMafia ' + R + '  ' + W)
        return rep()    
    except:
        fighter()
def rep():
    x = open(ids,'r')
    y = x.read()
    if id in y:
        print (R+'.  Oops 405')
        time.sleep(1)
        time.sleep(R+'Error While Reporting the Id')
        time.sleep(1)
        return test1()
    else:         
        return test2()
               
def test1():
          _bs = br.response().read()
          bb=bs4.BeautifulSoup(_bs,
				features="html.parser"
			)
          if len(bb) !=0:              
              for x in bb.find_all("a",href=True):                  
                  if "rapid_report" in x["href"]:                      
                      _cadow = x["href"]                      
                      br.open(_cadow)
                      return test2()
          
def test2():
    try:
        br._factory.is_html=True
        br.select_form(nr=0)
        br.form["tag"] = ["profile_fake_account"]
        br.submit()
        return test3()
    except Exception as f:
        print (' [+] Bad404')
                
def test3():     
    try:         
        br._factory.is_html=True
        br.select_form(nr=0)
        br.form["action_key"] = ["FRX_PROFILE_REPORT_CONFIRMATION"]
        br.submit()
        return _test4()
    except Exception as f:         
        print ('    Bad405')
                 
def test4():     
    try:         
        br._factory.is_html=True
        br.select_form(nr=0)
        br.form["checked"] = ["yes"]
        br.submit()
        jj = open(ids,'w')
        jj.write(_id)
        print ''
        time.sleep(2)
        print (G+'[-]Reported ')
        time.sleep(1)
        exit()
    except Exception as f:         
        print ('    Bad406')
    
if __name__ == '__main__':
    menu()
